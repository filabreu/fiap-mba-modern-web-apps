import type { NextPage } from 'next'
import { useEffect, useState } from 'react'
import Head from 'next/head'

import withAuthGuard from '../hocs/withAuthGuard'
import getProducts, { GetProductsResponse } from '../services/products/getProducts'
import Product from '../types/Product'

const Home: NextPage = () => {
  const [currentPage, setCurrentPage] = useState<string>('1')
  const [totalPages, setTotalPages] = useState(1)
  const [products, setProducts] = useState<Product[]>([])

  useEffect(() => {
    getProducts({ page: currentPage, perPage: '4' })
      .then((data: GetProductsResponse) => {
        setCurrentPage(data.page)
        setTotalPages(data.totalItems / 4)
        setProducts(data.products)
      })
      .catch((err) => {
        console.error(err)
      })
  }, [setProducts, currentPage])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h3 className="pt-12 text-3xl text-center font-bold">Produtos</h3>
      <div className="px-8 grid grid-cols-4 gap-4 pt-8 justify-center">
        {products.map((product) => (
          <div
            key={`product_${product._id}`}
            className="p-4 flex flex-col justify-between border border-black rounded-lg"
          >
            <h3 className="text-xl font-weight-bold">{product.name}</h3>
            <div className="mt-4">
              <p className="text-2xl text-center">$ {product.price}</p>
              <div className="flex align-center justify-between">
                <span>detalhes</span>
                <span className="text-xl">{product.favorite ? '‚ù§Ô∏è' : 'ü§ç'}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div className="mt-8 text-center">
        {Array.from({ length: totalPages }).map((_, page) => (
          <span
            className={`mx-4 text-xl cursor-pointer ${currentPage === (page + 1).toString() && 'font-bold'}`}
            key={`pagination_${page + 1}`}
            onClick={() => setCurrentPage((page + 1).toString())}
          >
            {page + 1}
          </span>
        ))}
      </div>
    </>
  )
}

export default withAuthGuard(Home)
